// This file is auto-generated by @hey-api/openapi-ts

export type Gender = 'male' | 'female' | 'other';

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type InventoryCreate = {
    item_id: number;
    quantity: number;
};

export type ReportCreate = {
    survivor_id: number;
    reporter_id?: number | null;
};

export type SuccessResponse = {
    message: string;
};

export type SurvivalLocationUpdateResponse = {
    latitude: number;
    longitude: number;
    id: number;
};

export type Survivor = {
    latitude: number;
    longitude: number;
    name: string;
    age: number;
    gender: Gender;
    id?: number | null;
    is_infected?: boolean;
};

export type SurvivorCreate = {
    latitude: number;
    longitude: number;
    name: string;
    age: number;
    gender: Gender;
    inventory: Array<InventoryCreate>;
};

export type SurvivorLocationUpdate = {
    latitude: number;
    longitude: number;
    survivor_id: number;
};

export type Trade = {
    from_survivor_id: number;
    to_survivor_id: number;
    from_items: Array<TradeItem>;
    to_items: Array<TradeItem>;
};

export type TradeItem = {
    item_id: number;
    quantity: number;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type RootReadRootResponse = SuccessResponse;

export type SurvivorsReadSurvivorsEndpointResponse = Array<Survivor>;

export type SurvivorsCreateSurvivorEndpointData = {
    requestBody: SurvivorCreate;
};

export type SurvivorsCreateSurvivorEndpointResponse = Survivor;

export type SurvivorsReadSurvivorEndpointData = {
    survivorId: number;
};

export type SurvivorsReadSurvivorEndpointResponse = Survivor;

export type SurvivorsUpdateSurvivorLocationEndpointData = {
    requestBody: SurvivorLocationUpdate;
};

export type SurvivorsUpdateSurvivorLocationEndpointResponse = SurvivalLocationUpdateResponse;

export type SurvivorsReportInfectionEndpointData = {
    requestBody: ReportCreate;
};

export type SurvivorsReportInfectionEndpointResponse = SuccessResponse;

export type TradeTradeItemsEndpointData = {
    requestBody: Trade;
};

export type TradeTradeItemsEndpointResponse = SuccessResponse;

export type $OpenApiTs = {
    '/': {
        get: {
            res: {
                /**
                 * Successful Response
                 */
                200: SuccessResponse;
            };
        };
    };
    '/survivors/': {
        get: {
            res: {
                /**
                 * Successful Response
                 */
                200: Array<Survivor>;
            };
        };
        post: {
            req: SurvivorsCreateSurvivorEndpointData;
            res: {
                /**
                 * Successful Response
                 */
                201: Survivor;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/survivors/{survivor_id}/': {
        get: {
            req: SurvivorsReadSurvivorEndpointData;
            res: {
                /**
                 * Successful Response
                 */
                200: Survivor;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/survivors/location/': {
        patch: {
            req: SurvivorsUpdateSurvivorLocationEndpointData;
            res: {
                /**
                 * Successful Response
                 */
                200: SurvivalLocationUpdateResponse;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/survivors/report/': {
        post: {
            req: SurvivorsReportInfectionEndpointData;
            res: {
                /**
                 * Successful Response
                 */
                201: SuccessResponse;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/trade/': {
        post: {
            req: TradeTradeItemsEndpointData;
            res: {
                /**
                 * Successful Response
                 */
                200: SuccessResponse;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
};