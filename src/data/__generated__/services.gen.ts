// This file is auto-generated by @hey-api/openapi-ts
import type { CancelablePromise } from './core/CancelablePromise'
import { OpenAPI } from './core/OpenAPI'
import { request as __request } from './core/request'
import type {
  CreateSurvivorData,
  CreateSurvivorResponse,
  GetInventoryItemsResponse,
  GetTradeDataData,
  GetTradeDataResponse,
  ReadRootResponse,
  ReadSurvivorData,
  ReadSurvivorResponse,
  ReadSurvivorsResponse,
  ReportInfectionData,
  ReportInfectionResponse,
  TradeItemsData,
  TradeItemsResponse,
  UpdateSurvivorLocationData,
  UpdateSurvivorLocationResponse
} from './types.gen'

export class RootService {
  /**
   * Read Root
   * @returns SuccessResponse Successful Response
   * @throws ApiError
   */
  public static readRoot(): CancelablePromise<ReadRootResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/'
    })
  }
}

export class SurvivorsService {
  /**
   * Read Survivors Endpoint
   * @returns Survivor Successful Response
   * @throws ApiError
   */
  public static readSurvivors(): CancelablePromise<ReadSurvivorsResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/survivors/'
    })
  }

  /**
   * Create Survivor Endpoint
   * @param data The data for the request.
   * @param data.requestBody
   * @returns Survivor Successful Response
   * @throws ApiError
   */
  public static createSurvivor(
    data: CreateSurvivorData
  ): CancelablePromise<CreateSurvivorResponse> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/survivors/',
      body: data.requestBody,
      mediaType: 'application/json',
      errors: {
        422: 'Validation Error'
      }
    })
  }

  /**
   * Read Survivor Endpoint
   * @param data The data for the request.
   * @param data.survivorId
   * @returns SurvivorPublic Successful Response
   * @throws ApiError
   */
  public static readSurvivor(
    data: ReadSurvivorData
  ): CancelablePromise<ReadSurvivorResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/survivors/{survivor_id}/',
      path: {
        survivor_id: data.survivorId
      },
      errors: {
        422: 'Validation Error'
      }
    })
  }

  /**
   * Update Survivor Location Endpoint
   * @param data The data for the request.
   * @param data.requestBody
   * @returns SurvivalLocationUpdateResponse Successful Response
   * @throws ApiError
   */
  public static updateSurvivorLocation(
    data: UpdateSurvivorLocationData
  ): CancelablePromise<UpdateSurvivorLocationResponse> {
    return __request(OpenAPI, {
      method: 'PATCH',
      url: '/survivors/location/',
      body: data.requestBody,
      mediaType: 'application/json',
      errors: {
        422: 'Validation Error'
      }
    })
  }

  /**
   * Report Infection Endpoint
   * @param data The data for the request.
   * @param data.requestBody
   * @returns SuccessResponse Successful Response
   * @throws ApiError
   */
  public static reportInfection(
    data: ReportInfectionData
  ): CancelablePromise<ReportInfectionResponse> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/survivors/report/',
      body: data.requestBody,
      mediaType: 'application/json',
      errors: {
        422: 'Validation Error'
      }
    })
  }
}

export class TradeService {
  /**
   * Trade Items Endpoint
   * @param data The data for the request.
   * @param data.requestBody
   * @returns SuccessResponse Successful Response
   * @throws ApiError
   */
  public static tradeItems(
    data: TradeItemsData
  ): CancelablePromise<TradeItemsResponse> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/trade/',
      body: data.requestBody,
      mediaType: 'application/json',
      errors: {
        422: 'Validation Error'
      }
    })
  }

  /**
   * Get Trade Data Endpoint
   * @param data The data for the request.
   * @param data.fromSurvivorId
   * @param data.toSurvivorId
   * @returns TradeData Successful Response
   * @throws ApiError
   */
  public static getTradeData(
    data: GetTradeDataData
  ): CancelablePromise<GetTradeDataResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/trade/',
      query: {
        from_survivor_id: data.fromSurvivorId,
        to_survivor_id: data.toSurvivorId
      },
      errors: {
        422: 'Validation Error'
      }
    })
  }
}

export class InventoryItemsService {
  /**
   * Get Inventory Items Endpoint
   * @returns InventoryItemPublic Successful Response
   * @throws ApiError
   */
  public static getInventoryItems(): CancelablePromise<GetInventoryItemsResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/inventory-items/'
    })
  }
}
